// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Summarizes user spending habits for the past month, highlighting overspending areas.
 *
 * - summarizeSpending - A function that summarizes spending habits.
 * - SummarizeSpendingInput - The input type for the summarizeSpending function.
 * - SummarizeSpendingOutput - The return type for the summarizeSpending function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const SummarizeSpendingInputSchema = z.object({
  spendingData: z
    .string()
    .describe(
      'JSON string containing the user\'s spending data for the past month.  Each object should contain category and amount fields.'
    ),
});
export type SummarizeSpendingInput = z.infer<typeof SummarizeSpendingInputSchema>;

const SummarizeSpendingOutputSchema = z.object({
  summary: z
    .string()
    .describe(
      'A summary of the user\'s spending habits for the past month, highlighting areas where they are overspending.'
    ),
});
export type SummarizeSpendingOutput = z.infer<typeof SummarizeSpendingOutputSchema>;

export async function summarizeSpending(input: SummarizeSpendingInput): Promise<SummarizeSpendingOutput> {
  return summarizeSpendingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeSpendingPrompt',
  input: {
    schema: z.object({
      spendingData: z
        .string()
        .describe(
          'JSON string containing the user\'s spending data for the past month. Each object should contain category and amount fields.'
        ),
    }),
  },
  output: {
    schema: z.object({
      summary: z
        .string()
        .describe(
          'A summary of the user\'s spending habits for the past month, highlighting areas where they are overspending.'
        ),
    }),
  },
  prompt: `You are a personal finance assistant.  Summarize the following spending data for the user, highlighting areas where they are overspending.  Be concise.

Spending Data:
{{{spendingData}}}
`,
});

const summarizeSpendingFlow = ai.defineFlow<
  typeof SummarizeSpendingInputSchema,
  typeof SummarizeSpendingOutputSchema
>(
  {
    name: 'summarizeSpendingFlow',
    inputSchema: SummarizeSpendingInputSchema,
    outputSchema: SummarizeSpendingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
